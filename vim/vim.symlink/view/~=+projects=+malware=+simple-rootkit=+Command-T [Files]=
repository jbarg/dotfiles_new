let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
noremap <buffer> <nowait> <silent>  :call commandt#private#CursorStart()
noremap <buffer> <nowait> <silent>  :call commandt#private#Cancel()
noremap <buffer> <nowait> <silent>  :call commandt#private#RemoveBuffer()
noremap <buffer> <nowait> <silent>  :call commandt#private#CursorEnd()
noremap <buffer> <nowait> <silent>  :call commandt#private#Refresh()
noremap <buffer> <nowait> <silent>  :call commandt#private#CursorLeft()
noremap <buffer> <nowait> <silent> 	 :call commandt#private#ToggleFocus()
let s:cpo_save=&cpo
set cpo&vim
noremap <buffer> <nowait> <silent> <NL> :call commandt#private#SelectNext()
noremap <buffer> <nowait> <silent>  :call commandt#private#SelectPrev()
noremap <buffer> <nowait> <silent>  :call commandt#private#CursorRight()
noremap <buffer> <nowait> <silent>  :call commandt#private#AcceptSelection()
noremap <buffer> <nowait> <silent>  :call commandt#private#SelectNext()
noremap <buffer> <nowait> <silent>  :call commandt#private#SelectPrev()
noremap <buffer> <nowait> <silent>  :call commandt#private#Quickfix()
noremap <buffer> <nowait> <silent>  :call commandt#private#AcceptSelectionSplit()
noremap <buffer> <nowait> <silent>  :call commandt#private#AcceptSelectionTab()
noremap <buffer> <nowait> <silent>  :call commandt#private#Clear()
noremap <buffer> <nowait> <silent>  :call commandt#private#AcceptSelectionVSplit()
noremap <buffer> <nowait> <silent>  :call commandt#private#ClearPrevWord()
noremap <buffer> <nowait> <silent>   :call commandt#private#HandleKey(32)
noremap <buffer> <nowait> <silent> ! :call commandt#private#HandleKey(33)
noremap <buffer> <nowait> <silent> " :call commandt#private#HandleKey(34)
noremap <buffer> <nowait> <silent> # :call commandt#private#HandleKey(35)
noremap <buffer> <nowait> <silent> $ :call commandt#private#HandleKey(36)
noremap <buffer> <nowait> <silent> % :call commandt#private#HandleKey(37)
noremap <buffer> <nowait> <silent> & :call commandt#private#HandleKey(38)
noremap <buffer> <nowait> <silent> ' :call commandt#private#HandleKey(39)
noremap <buffer> <nowait> <silent> ( :call commandt#private#HandleKey(40)
noremap <buffer> <nowait> <silent> ) :call commandt#private#HandleKey(41)
noremap <buffer> <nowait> <silent> * :call commandt#private#HandleKey(42)
noremap <buffer> <nowait> <silent> + :call commandt#private#HandleKey(43)
noremap <buffer> <nowait> <silent> , :call commandt#private#HandleKey(44)
noremap <buffer> <nowait> <silent> - :call commandt#private#HandleKey(45)
noremap <buffer> <nowait> <silent> . :call commandt#private#HandleKey(46)
noremap <buffer> <nowait> <silent> / :call commandt#private#HandleKey(47)
noremap <buffer> <nowait> <silent> 0 :call commandt#private#HandleKey(48)
noremap <buffer> <nowait> <silent> 1 :call commandt#private#HandleKey(49)
noremap <buffer> <nowait> <silent> 2 :call commandt#private#HandleKey(50)
noremap <buffer> <nowait> <silent> 3 :call commandt#private#HandleKey(51)
noremap <buffer> <nowait> <silent> 4 :call commandt#private#HandleKey(52)
noremap <buffer> <nowait> <silent> 5 :call commandt#private#HandleKey(53)
noremap <buffer> <nowait> <silent> 6 :call commandt#private#HandleKey(54)
noremap <buffer> <nowait> <silent> 7 :call commandt#private#HandleKey(55)
noremap <buffer> <nowait> <silent> 8 :call commandt#private#HandleKey(56)
noremap <buffer> <nowait> <silent> 9 :call commandt#private#HandleKey(57)
noremap <buffer> <nowait> <silent> : :call commandt#private#HandleKey(58)
noremap <buffer> <nowait> <silent> ; :call commandt#private#HandleKey(59)
noremap <buffer> <nowait> <silent> < :call commandt#private#HandleKey(60)
noremap <buffer> <nowait> <silent> = :call commandt#private#HandleKey(61)
noremap <buffer> <nowait> <silent> > :call commandt#private#HandleKey(62)
noremap <buffer> <nowait> <silent> ? :call commandt#private#HandleKey(63)
noremap <buffer> <nowait> <silent> @ :call commandt#private#HandleKey(64)
noremap <buffer> <nowait> <silent> A :call commandt#private#HandleKey(65)
noremap <buffer> <nowait> <silent> B :call commandt#private#HandleKey(66)
noremap <buffer> <nowait> <silent> C :call commandt#private#HandleKey(67)
noremap <buffer> <nowait> <silent> D :call commandt#private#HandleKey(68)
noremap <buffer> <nowait> <silent> E :call commandt#private#HandleKey(69)
noremap <buffer> <nowait> <silent> F :call commandt#private#HandleKey(70)
noremap <buffer> <nowait> <silent> G :call commandt#private#HandleKey(71)
noremap <buffer> <nowait> <silent> H :call commandt#private#HandleKey(72)
noremap <buffer> <nowait> <silent> I :call commandt#private#HandleKey(73)
noremap <buffer> <nowait> <silent> J :call commandt#private#HandleKey(74)
noremap <buffer> <nowait> <silent> K :call commandt#private#HandleKey(75)
noremap <buffer> <nowait> <silent> L :call commandt#private#HandleKey(76)
noremap <buffer> <nowait> <silent> M :call commandt#private#HandleKey(77)
noremap <buffer> <nowait> <silent> N :call commandt#private#HandleKey(78)
noremap <buffer> <nowait> <silent> O :call commandt#private#HandleKey(79)
noremap <buffer> <nowait> <silent> P :call commandt#private#HandleKey(80)
noremap <buffer> <nowait> <silent> Q :call commandt#private#HandleKey(81)
noremap <buffer> <nowait> <silent> R :call commandt#private#HandleKey(82)
noremap <buffer> <nowait> <silent> S :call commandt#private#HandleKey(83)
noremap <buffer> <nowait> <silent> T :call commandt#private#HandleKey(84)
noremap <buffer> <nowait> <silent> U :call commandt#private#HandleKey(85)
noremap <buffer> <nowait> <silent> V :call commandt#private#HandleKey(86)
noremap <buffer> <nowait> <silent> W :call commandt#private#HandleKey(87)
noremap <buffer> <nowait> <silent> X :call commandt#private#HandleKey(88)
noremap <buffer> <nowait> <silent> Y :call commandt#private#HandleKey(89)
noremap <buffer> <nowait> <silent> Z :call commandt#private#HandleKey(90)
noremap <buffer> <nowait> <silent> [ :call commandt#private#HandleKey(91)
noremap <buffer> <nowait> <silent> \ :call commandt#private#HandleKey(92)
noremap <buffer> <nowait> <silent> ] :call commandt#private#HandleKey(93)
noremap <buffer> <nowait> <silent> ^ :call commandt#private#HandleKey(94)
noremap <buffer> <nowait> <silent> _ :call commandt#private#HandleKey(95)
noremap <buffer> <nowait> <silent> ` :call commandt#private#HandleKey(96)
noremap <buffer> <nowait> <silent> a :call commandt#private#HandleKey(97)
noremap <buffer> <nowait> <silent> b :call commandt#private#HandleKey(98)
noremap <buffer> <nowait> <silent> c :call commandt#private#HandleKey(99)
noremap <buffer> <nowait> <silent> d :call commandt#private#HandleKey(100)
noremap <buffer> <nowait> <silent> e :call commandt#private#HandleKey(101)
noremap <buffer> <nowait> <silent> f :call commandt#private#HandleKey(102)
noremap <buffer> <nowait> <silent> g :call commandt#private#HandleKey(103)
noremap <buffer> <nowait> <silent> h :call commandt#private#HandleKey(104)
noremap <buffer> <nowait> <silent> i :call commandt#private#HandleKey(105)
noremap <buffer> <nowait> <silent> j :call commandt#private#HandleKey(106)
noremap <buffer> <nowait> <silent> k :call commandt#private#HandleKey(107)
noremap <buffer> <nowait> <silent> l :call commandt#private#HandleKey(108)
noremap <buffer> <nowait> <silent> m :call commandt#private#HandleKey(109)
noremap <buffer> <nowait> <silent> n :call commandt#private#HandleKey(110)
noremap <buffer> <nowait> <silent> o :call commandt#private#HandleKey(111)
noremap <buffer> <nowait> <silent> p :call commandt#private#HandleKey(112)
noremap <buffer> <nowait> <silent> q :call commandt#private#HandleKey(113)
noremap <buffer> <nowait> <silent> r :call commandt#private#HandleKey(114)
noremap <buffer> <nowait> <silent> s :call commandt#private#HandleKey(115)
noremap <buffer> <nowait> <silent> t :call commandt#private#HandleKey(116)
noremap <buffer> <nowait> <silent> u :call commandt#private#HandleKey(117)
noremap <buffer> <nowait> <silent> v :call commandt#private#HandleKey(118)
noremap <buffer> <nowait> <silent> w :call commandt#private#HandleKey(119)
noremap <buffer> <nowait> <silent> x :call commandt#private#HandleKey(120)
noremap <buffer> <nowait> <silent> y :call commandt#private#HandleKey(121)
noremap <buffer> <nowait> <silent> z :call commandt#private#HandleKey(122)
noremap <buffer> <nowait> <silent> { :call commandt#private#HandleKey(123)
noremap <buffer> <nowait> <silent> | :call commandt#private#HandleKey(124)
noremap <buffer> <nowait> <silent> } :call commandt#private#HandleKey(125)
noremap <buffer> <nowait> <silent> ~ :call commandt#private#HandleKey(126)
noremap <buffer> <nowait> <silent> <Up> :call commandt#private#SelectPrev()
noremap <buffer> <nowait> <silent> <Down> :call commandt#private#SelectNext()
noremap <buffer> <nowait> <silent> <Del> :call commandt#private#Delete()
noremap <buffer> <nowait> <silent> <Right> :call commandt#private#CursorRight()
noremap <buffer> <nowait> <silent> <Left> :call commandt#private#CursorLeft()
noremap <buffer> <nowait> <silent> <BS> :call commandt#private#Backspace()
noremap <buffer> <nowait> <silent> <C-CR> :call commandt#private#AcceptSelectionSplit()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=unload
setlocal nobuflisted
setlocal buftype=nofile
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=0
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i,kspell
setlocal concealcursor=nvic
setlocal conceallevel=2
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'command-t'
setlocal filetype=command-t
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal nofoldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=99
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal formatprg=
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=-1
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal lispwords=
setlocal nolist
setlocal makeencoding=
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal nomodifiable
setlocal nrformats=bin,octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=3
setlocal noshortname
setlocal signcolumn=auto
setlocal nosmartindent
setlocal softtabstop=3
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en,de
setlocal statusline=%!airline#statusline(2)
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=9999
if &syntax != 'command-t'
setlocal syntax=command-t
endif
setlocal tabstop=3
setlocal tagcase=
setlocal tags=
setlocal termkey=
setlocal termsize=
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal undolevels=-123456
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=0
let s:l = 1 - ((0 * winheight(0) + 15) / 30)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
